%% Import data from text file
% Script for importing data from the following text file:
%
%    filename: msgs.csv
%
% Auto-generated by MATLAB on 16-Feb-2020 16:54:19

%% Setup the Import Options and import the data
opts = delimitedTextImportOptions("NumVariables", 4);

% Specify range and delimiter
opts.DataLines = [1, Inf];
opts.Delimiter = ",";

% Specify column names and types
opts.VariableNames = ["SENDER", "RECEIVER", "TIMESTAMP", "MESSAGE BODY"];
opts.VariableTypes = ["string", "string", "string", "string"];

% Specify file level properties
opts.ExtraColumnsRule = "ignore";
opts.EmptyLineRule = "skip";

% Specify variable properties
opts = setvaropts(opts, ["SENDER", "RECEIVER", "TIMESTAMP", "MESSAGE BODY"], "WhitespaceRule", "preserve");
opts = setvaropts(opts, ["SENDER", "RECEIVER", "TIMESTAMP", "MESSAGE BODY"], "EmptyFieldRule", "auto");

% Import the data
msgs6666 = readmatrix("all messages/msgs6666.csv", opts);

msgs7777 = readmatrix("all messages/msgs7777.csv", opts);

msgs8896 = readmatrix("all messages/msgs8896.csv", opts);

msgsAll = [msgs6666; msgs7777; msgs8896];

lengths = [1 ;length(msgs6666);length(msgs7777)+length(msgs6666);length(msgs8896)+length(msgs7777)+length(msgs6666)];
%%
correctMsgs = zeros((length(msgs8896)+length(msgs7777)+length(msgs6666)),1);
for i = 2:4
    if(i~=4) 
        for j = (i+1):4
            for k = lengths(i-1):lengths(i)
                for kk = (lengths(j-1)+1):lengths(j)
    %                 kk
                    if((msgsAll(k,3) == msgsAll(kk,3)) && ((msgsAll(k,4) == msgsAll(kk,4))))
                        correctMsgs(k) = 1;
                        correctMsgs(kk) = 1;
                    end
                end
            end
        end
    end
end

%% Diagnostics
total_success_ratio = sum(correctMsgs)/length(correctMsgs)

% SENDER FAULTS
% 6666 7777 8896
sender_faults = containers.Map;
sender_faults("6666") = 0;
sender_faults("7777") = 0;
sender_faults("8896") = 0;


for i=1:length(correctMsgs)
    if(correctMsgs(i) == 0)
        sender_faults(msgsAll(i,1)) = sender_faults(msgsAll(i,1)) + 1;
    end
end

senderFaults = [sender_faults("6666") sender_faults("7777") sender_faults("8896")] 
% 
sender_fault_rate = containers.Map;
sender_fault_rate("6666") = sender_faults("6666") / length(msgs6666);
sender_fault_rate("7777") = sender_faults("7777") / length(msgs7777);
sender_fault_rate("8896") = sender_faults("8896") / length(msgs8896);

senderFaultsRates = [sender_fault_rate("6666") sender_fault_rate("7777") sender_fault_rate("8896")] 

% RECEIVER FAULTS
% 6666 7777 8896
receiver_faults = containers.Map;
receiver_faults("6666") = 0;
receiver_faults("7777") = 0;
receiver_faults("8896") = 0;


for i=1:length(correctMsgs)
    if(correctMsgs(i) == 0)
        receiver_faults(msgsAll(i,2)) = receiver_faults(msgsAll(i,2)) + 1;
    end
end

receiverFaults = [receiver_faults("6666") receiver_faults("7777") receiver_faults("8896")] 
% 
receiver_fault_rate = containers.Map;
receiver_fault_rate("6666") = receiver_faults("6666") / length(msgs6666);
receiver_fault_rate("7777") = receiver_faults("7777") / length(msgs7777);
receiver_fault_rate("8896") = receiver_faults("8896") / length(msgs8896);

receiverFaultsRates = [receiver_fault_rate("6666") receiver_fault_rate("7777") receiver_fault_rate("8896")] 

% percentageDelivered 


